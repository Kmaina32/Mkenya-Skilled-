

{
  "rules": {
    "courses": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "bundles": {
       ".read": true,
       ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "programs": {
        ".read": true,
        ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "hero": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('isAdmin').val() === true",
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('isAdmin').val() === true"
      },
      ".read": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "calendarEvents": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "submissions": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$submissionId": {
        ".read": "root.child('submissions').child($submissionId).child('userId').val() === auth.uid || root.child('users').child(auth.uid).child('isAdmin').val() === true"
      },
      ".indexOn": "userId"
    },
    "tutorSettings": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "tutorHistory": {
      "$userId": {
        ".read": "auth != null && (auth.uid === $userId || root.child('users').child(auth.uid).child('isAdmin').val() === true)",
        ".write": "auth != null && auth.uid === $userId"
      }
    },
    "discussions": {
      ".read": "auth != null",
      "threads": {
        "$courseId": {
          ".read": "auth != null",
          ".write": "auth != null",
          ".indexOn": "createdAt"
        }
      },
      "replies": {
        "$threadId": {
           ".read": "auth != null",
           ".write": "auth != null",
           ".indexOn": "createdAt"
        }
      }
    },
     "liveSession": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "userNotes": {
        "$userId": {
            "$courseId": {
                ".read": "auth.uid === $userId",
                ".write": "auth.uid === $userId"
            }
        }
    },
    "analytics": {
        ".read": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true",
        ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true"
    },
    "apiKeys": {
        "$userId": {
            ".read": "auth != null && auth.uid === $userId",
            ".write": "auth != null && auth.uid === $userId"
        }
    },
    "apiUsage": {
      "$userId": {
        // API usage logs can only be written by a trusted process (e.g., server with admin rights)
        ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true",
        // Users can't read the detailed log of other users
        ".read": "auth != null && auth.uid === $userId"
      }
    }
  }
}


